
# coding: utf-8

# In[44]:

import numpy as np
import math as mt
import sympy as sp


# In[45]:

sp.init_printing()


# In[46]:

def swapRows(v,i,j):
    
        if len(v) == 1:
                v[i],v[j] = v[j],v[i]
        else:
                temp = v[i].copy() 
                v[i] = v[j]
                v[j] = temp


# In[47]:

def gaussFunc(aM,bM,n):
    for k in range(0,n - 1):       #Прямой ход с выбором главного элемента
            sP = abs(aM[k:n,k]).argmax() + k
            p = abs(aM[k:n,k]).max()
            ss = abs(aM[k,k])
            if ss < p:
                aM[k] = aM[k]*(-1)
                bM[k] = bM[k]*(-1)
                swapRows(aM,k,sP)
                swapRows(bM,k,sP)
            for i in range(k + 1 ,n):
                l = aM[i,k] / aM[k,k]
                aM[i] = aM[i] - l*aM[k]
                bM[i] = bM[i] - l*bM[k]
    xx = bM.copy()
    for k in range(n-1,-1,-1):     #Обратный ход 
        xx[k] = (xx[k] - np.dot(aM[k,k+1:n],xx[k+1:n]))/aM[k,k]
       
    return xx


# In[48]:

def calculateDet(aM,count,n):
    g = aM.diagonal()
    dt = g[0,0]
    for i in range(1,n):
        dt*= g[0,i]

    dt = dt * mt.pow(-1,count)
    
    return dt


# In[49]:

a = np.matrix([[1.,1.,1.,1.,1.,1.,1.,1.,1.,1.],
                     [1.,2.,4.,8.,16.,32.,64.,128.,256.,512.],
                     [1.,3.,9.,27.,81.,243.,729.,2187.,6561.,19683.],
                     [1.,4.,16.,64.,256.,1024.,4096.,16384.,65536.,262144.],
                     [1.,5.,25.,125.,625.,3125.,15625.,78125.,390625.,1953125.],
                     [1.,6.,36.,216.,1296.,7776.,46656.,279936.,1679616.,10077696.],
                     [1.,7.,49.,343.,2401.,16807.,117649.,823543.,5764801.,40353607.],
                     [1.,8.,64.,512.,4096.,32768.,262144.,2097152.,16777216.,134217728.],
                     [1.,9.,81.,729.,6561., 59049.,531441.,4782969.,43046721.,387420489.],
                     [1.,10.,100.,1000.,10000.,100000.,1000000.,10000000.,100000000.,1000000000.]])

b = np.matrix([[10.],[1023.],[29524.],[349525.],[2441406.],[12093235.],[47079208.],[153391689.],[435848050.],[1111111111.]])

A = sp.Matrix(10,10,[1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,
                     1.,2.,4.,8.,16.,32.,64.,128.,256.,512.,
                     1.,3.,9.,27.,81.,243.,729.,2187.,6561.,19683.,
                     1.,4.,16.,64.,256.,1024.,4096.,16384.,65536.,262144.,
                     1.,5.,25.,125.,625.,3125.,15625.,78125.,390625.,1953125.,
                     1.,6.,36.,216.,1296.,7776.,46656.,279936.,1679616.,10077696.,
                     1.,7.,49.,343.,2401.,16807.,117649.,823543.,5764801.,40353607.,
                     1.,8.,64.,512.,4096.,32768.,262144.,2097152.,16777216.,134217728.,
                     1.,9.,81.,729.,6561., 59049.,531441.,4782969.,43046721.,387420489.,
                     1.,10.,100.,1000.,10000.,100000.,1000000.,10000000.,100000000.,1000000000.])

B = sp.Matrix(10,1,[10,1023,29524,349525,2441406,12093235,47079208,153391689,435848050,1111111111])


# In[50]:

count = 0
nb = len(b)
deta=calculateDet(a,count,nb)
if (deta!=0):
    x = gaussFunc(a,b,nb)


# In[51]:

#Ответ:
x


# #### Решение при помощи sympy

# In[52]:

A.solve(B)


# In[ ]:




# In[ ]:



